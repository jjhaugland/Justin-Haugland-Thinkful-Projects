SQL Self-Sufficiency Exam




-1. 


SELECT *
FROM public.naep 


-2. 


SELECT *
FROM public.naep 
LIMIT 50


-3.


SELECT state, COUNT(avg_math_4_score), AVG(avg_math_4_score), MIN(avg_math_4_score), MAX(avg_math_4_score)
FROM public.naep 
GROUP by state
ORDER by state


-4. 


SELECT state, COUNT(avg_math_4_score), AVG(avg_math_4_score), MIN(avg_math_4_score), MAX(avg_math_4_score) 
FROM public.naep 
GROUP by state
HAVING (MAX(avg_math_4_score)-MIN(avg_math_4_score)) > 30
ORDER by state


-5  


SELECT state, AVG(avg_math_4_score) AS bottom_10_states
FROM public.naep
WHERE year = 2000
GROUP by state
ORDER by bottom_10_states ASC
LIMIT 10
-6. 


SELECT ROUND (AVG(avg_math_4_score), 2), state 
FROM public.naep
WHERE year = 2000
GROUP by state
ORDER by state


-7. 


SELECT state, avg_math_4_score 
FROM public.naep
WHERE year=2000 AND avg_math_4_score <
    (SELECT AVG(avg_math_4_score)
    FROM public.naep)
GROUP by state, avg_math_4_score 


-8. 


SELECT state, avg_math_4_score AS scores_missing_y2000
FROM public.naep
WHERE year = 2000 AND avg_math_4_score IS null
GROUP by state, avg_math_4_score
ORDER by state, avg_math_4_score


-9. 


SELECT naep.state, ROUND (avg_math_4_score, 2), total_expenditure 
FROM public.naep
LEFT JOIN public.finance
ON public.naep.id = 
public.finance.id
WHERE naep.year = 2000 AND avg_math_4_score IS NOT null
GROUP by naep.state, avg_math_4_score, total_expenditure
ORDER by total_expenditure DESC